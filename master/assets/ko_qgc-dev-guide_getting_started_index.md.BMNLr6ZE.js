import{a,_ as n}from"./chunks/qt_creator_build_qgc.BmjHaw1T.js";import{_ as r}from"./chunks/qt_project_installer.BGD5KSnf.js";import{_ as d,c as u,o as p,ag as o,j as e,a as i,t as s}from"./chunks/framework.BudlMBKT.js";const q=JSON.parse('{"title":"Getting Started with Source and Builds","description":"","frontmatter":{"qt_version":"6.6.1"},"headers":[],"relativePath":"ko/qgc-dev-guide/getting_started/index.md","filePath":"ko/qgc-dev-guide/getting_started/index.md"}'),h={name:"ko/qgc-dev-guide/getting_started/index.md"},c={class:"warning custom-block"};function g(l,t,m,b,k,f){return p(),u("div",null,[t[22]||(t[22]=o('<h1 id="getting-started-with-source-and-builds" tabindex="-1">Getting Started with Source and Builds <a class="header-anchor" href="#getting-started-with-source-and-builds" aria-label="Permalink to &quot;Getting Started with Source and Builds&quot;">​</a></h1><p>This topic explains how to get the <em>QGroundControl</em> source code and build it either natively or within a <em>Vagrant</em> environment. It also provides information about optional or OS specific functionality.</p><h2 id="daily-builds" tabindex="-1">Daily Builds <a class="header-anchor" href="#daily-builds" aria-label="Permalink to &quot;Daily Builds&quot;">​</a></h2><p>If you just want to test (and not debug) a recent build of <em>QGroundControl</em> you can use the <a href="./../../qgc-user-guide/releases/daily_builds.html">Daily Build</a>. Versions are provided for all platforms.</p><h2 id="source-code" tabindex="-1">Source Code <a class="header-anchor" href="#source-code" aria-label="Permalink to &quot;Source Code&quot;">​</a></h2><p>Source code for <em>QGroundControl</em> is kept on GitHub here: <a href="https://github.com/mavlink/qgroundcontrol" target="_blank" rel="noreferrer">https://github.com/mavlink/qgroundcontrol</a>. It is <a href="https://github.com/mavlink/qgroundcontrol/blob/master/COPYING.md" target="_blank" rel="noreferrer">dual-licensed under Apache 2.0 and GPLv3</a>.</p><p>To get the source files:</p><ol><li><p>Clone the repo (or your fork) including submodules:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/mavlink/qgroundcontrol.git</span></span></code></pre></div></li><li><p>Update submodules (required each time you pull new source code):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span></code></pre></div></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Github source-code zip files cannot be used because these do not contain the appropriate submodule source code. You must use git!</p></div><h2 id="build-qgroundcontrol" tabindex="-1">Build QGroundControl <a class="header-anchor" href="#build-qgroundcontrol" aria-label="Permalink to &quot;Build QGroundControl&quot;">​</a></h2><h3 id="using-containers" tabindex="-1">Using Containers <a class="header-anchor" href="#using-containers" aria-label="Permalink to &quot;Using Containers&quot;">​</a></h3><p>We support Linux builds using a container found on the source tree of the repository, which can help you develop and deploy the QGC apps without having to install any of the requirements on your local environment.</p><p><a href="./../getting_started/container.html">Container Guide</a></p><h3 id="native-builds" tabindex="-1">Native Builds <a class="header-anchor" href="#native-builds" aria-label="Permalink to &quot;Native Builds&quot;">​</a></h3><p><em>QGroundControl</em> builds are supported for macOS, Linux, Windows, and Android. Creating a version of QGC for iOS is theoretically possible but is no longer supported as a standard build. <em>QGroundControl</em> uses <a href="http://www.qt.io" target="_blank" rel="noreferrer">Qt</a> as its cross-platform support library.</p>',15)),e("p",null,[i("The required version of Qt is "+s(l.$frontmatter.qt_version)+" ",1),t[0]||(t[0]=e("strong",null,"(only)",-1)),t[1]||(t[1]=i("."))]),e("div",c,[t[3]||(t[3]=e("p",{class:"custom-block-title"},"WARNING",-1)),e("p",null,[t[2]||(t[2]=e("strong",null,"Do not use any other version of Qt!",-1)),i(" QGC has been thoroughly tested with the specified version of Qt ("+s(l.$frontmatter.qt_version)+"). There is a significant risk that other Qt versions will inject bugs that affect stability and safety (even if QGC compiles).",1)])]),t[23]||(t[23]=o('<p>For more information see: <a href="https://doc.qt.io/qt-6/supported-platforms.html" target="_blank" rel="noreferrer">Qt 6 supported platform list</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Native <a href="./../getting_started/cent_os.html">CentOS Builds</a> are also supported, but are documented separately (as the tested environment is different).</p></div><h4 id="install-qt" tabindex="-1">Install Qt <a class="header-anchor" href="#install-qt" aria-label="Permalink to &quot;Install Qt&quot;">​</a></h4><p>You <strong>must install Qt as described below</strong> instead of using pre-built packages from say, a Linux distribution.</p><p>To install Qt:</p>',5)),e("ol",null,[t[10]||(t[10]=e("li",null,[e("p",null,[i("Download and run the "),e("a",{href:"http://www.qt.io/download-open-source",target:"_blank",rel:"noreferrer"},"Qt Online Installer")]),e("ul",null,[e("li",null,[e("strong",null,"Ubuntu:"),e("ul",null,[e("li",null,[i("Set the downloaded file to executable using: "),e("code",null,"chmod +x"),i(".")]),e("li",null,"You may also need to install libxcb-cursor.")])])])],-1)),e("li",null,[e("p",null,[t[4]||(t[4]=i("In the installer ")),t[5]||(t[5]=e("em",null,"Select Components",-1)),i(" dialog choose: Qt "+s(l.$frontmatter.qt_version)+".",1)]),t[9]||(t[9]=e("p",null,"Then install the following components:",-1)),e("ul",null,[e("li",null,[t[6]||(t[6]=i("Under _Qt ")),e("em",null,s(l.$frontmatter.qt_version),1),t[7]||(t[7]=o(" select: <ul><li>Depending on the OS you want to build for: <ul><li><strong>Windows</strong>: <em>MSVC 2019 64 bit</em></li><li><strong>MacOS</strong>: <em>macOS</em></li><li><strong>Linux</strong>: <em>Desktop gcc 64-bit</em></li><li><strong>Android</strong>: <em>Android</em></li></ul></li><li><em>Qt 5 Compatibility Module</em></li><li><em>Qt Shader Tools</em></li></ul>",2))]),t[8]||(t[8]=o("<li>Under <em>Additional Libraries</em> select: <ul><li><em>Qt Charts</em></li><li><em>Qt Connectivity</em></li><li><em>Qt Location (TP)</em></li><li><em>Qt Multimedia</em></li><li><em>Qt Positioning</em></li><li><em>Qt Serial Port</em></li><li><em>Qt Speech</em></li></ul></li>",1))])]),t[11]||(t[11]=o('<li><p>Install Additional Packages (Platform Specific)</p><ul><li><strong>Ubuntu:</strong> <code>sudo apt-get install speech-dispatcher libudev-dev libsdl2-dev patchelf build-essential</code></li><li><strong>Fedora:</strong> <code>sudo dnf install speech-dispatcher SDL2-devel SDL2 systemd-devel patchelf</code></li><li><strong>Arch Linux:</strong> <code>pacman -Sy speech-dispatcher patchelf</code></li><li><strong>OSX</strong> <a href="https://doc.qt.io/qt-6/macos.html" target="_blank" rel="noreferrer">Setup</a></li><li><strong>Android</strong> <a href="https://doc.qt.io/qt-6/android-getting-started.html" target="_blank" rel="noreferrer">Setup</a></li></ul></li><li><p>Install Optional/OS-Specific Functionality</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Optional features that are dependent on the operating system and user-installed libraries are linked/described below. These features can be forcibly enabled/disabled by specifying additional values to qmake.</p></div><ul><li><strong>Video Streaming/Gstreamer:</strong> - see <a href="https://github.com/mavlink/qgroundcontrol/blob/master/src/VideoReceiver/README.md" target="_blank" rel="noreferrer">Video Streaming</a>.</li></ul></li>',2))]),t[24]||(t[24]=e("h4",{id:"qt-creator",tabindex:"-1"},[i("Building using Qt Creator "),e("a",{class:"header-anchor",href:"#qt-creator","aria-label":'Permalink to "Building using Qt Creator {#qt-creator}"'},"​")],-1)),e("ol",null,[t[20]||(t[20]=e("li",null,[e("p",null,[i("Launch "),e("em",null,"Qt Creator"),i(" and open the "),e("strong",null,"qgroundcontrol.pro"),i(" project.")])],-1)),e("li",null,[t[19]||(t[19]=e("p",null,[i("In the "),e("strong",null,"Projects"),i(" section, select the appropriate kit for your needs:")],-1)),e("ul",null,[e("li",null,[e("p",null,[t[12]||(t[12]=e("strong",null,"OSX:",-1)),i(" Desktop Qt "+s(l.$frontmatter.qt_version)+" clang 64 bit",1)]),t[13]||(t[13]=e("div",{class:"info custom-block"},[e("p",{class:"custom-block-title"},"INFO"),e("p",null,[i("iOS builds must be built using "),e("a",{href:"http://doc.qt.io/qt-5/ios-support.html",target:"_blank",rel:"noreferrer"},"XCode"),i(".")])],-1))]),e("li",null,[e("p",null,[t[14]||(t[14]=e("strong",null,"Ubuntu:",-1)),i(" Desktop Qt "+s(l.$frontmatter.qt_version)+" GCC 64bit",1)])]),e("li",null,[e("p",null,[t[15]||(t[15]=e("strong",null,"Windows:",-1)),i(" Desktop Qt "+s(l.$frontmatter.qt_version)+" MSVC2019 ",1),t[16]||(t[16]=e("strong",null,"64bit",-1))])]),e("li",null,[e("p",null,[t[17]||(t[17]=e("strong",null,"Android:",-1)),i(" Android for armeabi-v7a (GCC 4.9, Qt "+s(l.$frontmatter.qt_version)+")",1)]),t[18]||(t[18]=e("ul",null,[e("li",null,[i("JDK11 is required. You can confirm it is being used by reviewing the project setting: "),e("strong",null,[i("Projects > Manage Kits > Devices > Android (tab) > Android Settings > "),e("em",null,"JDK location")]),i(".")])],-1))])])]),t[21]||(t[21]=e("li",null,[e("p",null,'Build using the "hammer" (or "play") icons:'),e("p",null,[e("img",{src:a,alt:"QtCreator Build Button"})])],-1))]),t[25]||(t[25]=o('<h4 id="vs" tabindex="-1">Install Visual Studio 2019 (Windows Only) <a class="header-anchor" href="#vs" aria-label="Permalink to &quot;Install Visual Studio 2019 (Windows Only) {#vs}&quot;">​</a></h4><p>The Windows compiler can be found here: <a href="https://visualstudio.microsoft.com/vs/older-downloads/" target="_blank" rel="noreferrer">Visual Studio 2019 compiler</a> (64 bit)</p><p>When installing, select <em>Desktop development with C++</em> as shown:</p><p><img src="'+n+`" alt="Visual Studio 2019 - Select Desktop Environment with C++"></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Visual Studio is ONLY used to get the compiler. Actually building <em>QGroundControl</em> should be done using <a href="#qt-creator">Qt Creator</a> or <a href="#qmake">qmake</a> as outlined below.</p></div><h4 id="qmake" tabindex="-1">Build using qmake on CLI <a class="header-anchor" href="#qmake" aria-label="Permalink to &quot;Build using qmake on CLI {#qmake}&quot;">​</a></h4><p>Example commands to build a default QGC and run it afterwards:</p><ol><li><p>Make sure you cloned the repository and updated the submodules before, see chapter <em>Source Code</em> above and switch into the repository folder:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qgroundcontrol</span></span></code></pre></div></li><li><p>Create and enter a shadow build directory:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></li><li><p>Configure the build using the qmake script in the root of the repository:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">qmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../</span></span></code></pre></div></li><li><p>Run make to compile and link. To accelerate the process things you can use the <code>-j{number of threads}</code> parameter.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j12</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You can also specify build time flags here. For example, you could disable airmap inclusion using the command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DEFINES</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DISABLE_AIRMAP</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></div></li><li><p>Run the QGroundcontrol binary that was just built:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./staging/QGroundControl</span></span></code></pre></div></li></ol><h3 id="vagrant" tabindex="-1">Vagrant <a class="header-anchor" href="#vagrant" aria-label="Permalink to &quot;Vagrant&quot;">​</a></h3><p><a href="https://www.vagrantup.com/" target="_blank" rel="noreferrer">Vagrant</a> can be used to build and run <em>QGroundControl</em> within a Linux virtual machine (the build can also be run on the host machine if it is compatible).</p><ol><li><a href="https://www.vagrantup.com/downloads.html" target="_blank" rel="noreferrer">Download</a> and <a href="https://www.vagrantup.com/docs/getting-started/" target="_blank" rel="noreferrer">Install</a> Vagrant</li><li>From the root directory of the <em>QGroundControl</em> repository run <code>vagrant up</code></li><li>To use the graphical environment run <code>vagrant reload</code></li></ol><h3 id="additional-build-notes-for-all-supported-os" tabindex="-1">Additional Build Notes for all Supported OS <a class="header-anchor" href="#additional-build-notes-for-all-supported-os" aria-label="Permalink to &quot;Additional Build Notes for all Supported OS&quot;">​</a></h3><ul><li><strong>Parallel builds:</strong> For non Windows builds, you can use the <code>-j#</code> option to run parellel builds.</li><li><strong>If you get this error when running <em>QGroundControl</em></strong>: <code>/usr/lib/x86_64-linux-gnu/libstdc++.so.6: version &#39;GLIBCXX_3.4.20&#39; not found.</code>, you need to either update to the latest <em>gcc</em>, or install the latest <em>libstdc++.6</em> using: <code>sudo apt-get install libstdc++6</code>.</li><li><strong>Unit tests:</strong> To run the <a href="./../contribute/unit_tests.html">unit tests</a>, build in <code>debug</code> mode with <code>UNITTEST_BUILD</code> definition, and then copy <code>deploy/qgroundcontrol-start.sh</code> script into the <code>debug</code> directory before running the tests.</li></ul><h2 id="building-qgc-installation-files" tabindex="-1">Building QGC Installation Files <a class="header-anchor" href="#building-qgc-installation-files" aria-label="Permalink to &quot;Building QGC Installation Files&quot;">​</a></h2><p>You can additionally create installation file(s) for <em>QGroundControl</em> as part of the normal build process.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>On Windows you will need to first install <a href="https://sourceforge.net/projects/nsis/" target="_blank" rel="noreferrer">NSIS</a>.</p></div><p>To add support for installation file creation you need to add <code>CONFIG+=installer</code> to your project file, or when you call <em>qmake</em>.</p><p>To do this in <em>Qt Creator</em>:</p><ul><li>Open <strong>Projects &gt; Build &gt; Build Steps &gt; qmake &gt; Additional arguments</strong>.</li><li>Enter <code>CONFIG+=installer</code> as shown: <img src="`+r+'" alt="Installer"></li></ul>',19))])}const S=d(h,[["render",g]]);export{q as __pageData,S as default};
