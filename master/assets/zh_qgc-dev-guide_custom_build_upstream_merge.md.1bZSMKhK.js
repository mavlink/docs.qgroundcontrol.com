import{_ as e,o as l,c as i,R as t}from"./chunks/framework.O0REyYVi.js";const h=JSON.parse('{"title":"使您的自定义构建保持最新","description":"","frontmatter":{},"headers":[],"relativePath":"zh/qgc-dev-guide/custom_build/upstream_merge.md","filePath":"zh/qgc-dev-guide/custom_build/upstream_merge.md"}'),a={name:"zh/qgc-dev-guide/custom_build/upstream_merge.md"},r=t(`<h1 id="使您的自定义构建保持最新" tabindex="-1">使您的自定义构建保持最新 <a class="header-anchor" href="#使您的自定义构建保持最新" aria-label="Permalink to &quot;使您的自定义构建保持最新&quot;">​</a></h1><h2 id="存储库设置" tabindex="-1">存储库设置 <a class="header-anchor" href="#存储库设置" aria-label="Permalink to &quot;存储库设置&quot;">​</a></h2><ul><li>从主QGC仓库创建一个新的存储库。 不要克隆，创建新的仓库，从主QGC仓库初始化它。</li><li>您现在可以克隆上面的仓库来完成您的工作并从中创建pull请求。</li><li>在你的克隆中创建一个叫做“mavlink”的远程，指向主QGC 仓库. <ul><li><pre><code>git remote add mavlink https://github.com/mavlink/qgroundcontrol.git
</code></pre></li></ul></li></ul><h2 id="上游合并" tabindex="-1">上游合并 <a class="header-anchor" href="#上游合并" aria-label="Permalink to &quot;上游合并&quot;">​</a></h2><p>我们将更新您的自定义构建的过程称为最新的QGC位和“上游合并”。 以下是如何执行此操作的示例：</p><ul><li><p>首先确保您的本地主人与您自己的回购主人是最新的。</p></li><li><p>创建一个分支以进行所有更改：</p><ul><li><pre><code>git checkout -b UpstreamMerge
</code></pre></li></ul></li><li><p>从QGC中提取最新的位：</p><ul><li><pre><code>git pull mavlink master
</code></pre></li><li>您将获得一个编辑器来更新合并更新。 他们很好，只是 <code>:q</code> 为了退出</li></ul></li><li><p>现在，您需要更新自定义构建中的资源：</p><ul><li><pre><code>cd custom
</code></pre></li><li><pre><code>python updateqrc.py
</code></pre></li></ul></li><li><p>全部构建以确保没有问题。</p></li><li><p>你现在完成了。 您可以将其作为针对您的仓库的拉动提交，或者您希望将更改提交到主仓库中。</p></li></ul><p>注意：这假设您的自定义构建基于QGC master。 如果它基于Stable分支，则使用稳定分支名称替换master。</p>`,7),o=[r];function c(d,p,u,s,n,m){return l(),i("div",null,o)}const g=e(a,[["render",c]]);export{h as __pageData,g as default};
