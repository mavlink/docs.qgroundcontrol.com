import{_ as e,o as t,c as o,R as l}from"./chunks/framework.diAschSC.js";const u=JSON.parse('{"title":"Coding Style","description":"","frontmatter":{},"headers":[],"relativePath":"ko/qgc-dev-guide/contribute/coding_style.md","filePath":"ko/qgc-dev-guide/contribute/coding_style.md"}'),n={name:"ko/qgc-dev-guide/contribute/coding_style.md"},i=l('<h1 id="coding-style" tabindex="-1">Coding Style <a class="header-anchor" href="#coding-style" aria-label="Permalink to &quot;Coding Style&quot;">â€‹</a></h1><p>High level style information:</p><ul><li>Tabs expanded to 4 spaces</li><li>Pascal/CamelCase naming conventions</li></ul><p>The style itself is documents in the following example files:</p><ul><li><a href="https://github.com/mavlink/qgroundcontrol/blob/master/CodingStyle.cc" target="_blank" rel="noreferrer">CodingStyle.cc</a></li><li><a href="https://github.com/mavlink/qgroundcontrol/blob/master/CodingStyle.h" target="_blank" rel="noreferrer">CodingStyle.h</a></li><li><a href="https://github.com/mavlink/qgroundcontrol/blob/master/CodingStyle.qml" target="_blank" rel="noreferrer">CodingStyle.qml</a></li></ul>',5),a=[i];function r(c,s,d,g,_,m){return t(),o("div",null,a)}const p=e(n,[["render",r]]);export{u as __pageData,p as default};
