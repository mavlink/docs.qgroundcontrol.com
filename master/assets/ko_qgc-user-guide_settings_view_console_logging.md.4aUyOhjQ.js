import{_ as o}from"./chunks/console.HFwmNuyk.js";import{_ as e,o as t,c as r,R as d}from"./chunks/framework.O0REyYVi.js";const q=JSON.parse('{"title":"콘솔 로그 설정","description":"","frontmatter":{},"headers":[],"relativePath":"ko/qgc-user-guide/settings_view/console_logging.md","filePath":"ko/qgc-user-guide/settings_view/console_logging.md"}'),a={name:"ko/qgc-user-guide/settings_view/console_logging.md"},n=d('<h1 id="콘솔-로그-설정" tabindex="-1">콘솔 로그 설정 <a class="header-anchor" href="#콘솔-로그-설정" aria-label="Permalink to &quot;콘솔 로그 설정&quot;">​</a></h1><p><em>콘솔</em>은 <em>QGroundControl</em> 문제를 진단하는 데 유용한 도구입니다. <strong>설정 화면 &gt; 콘솔</strong>에서 설정할 수 있습니다.</p><p><img src="'+o+`" alt="콘솔 로그"></p><p><strong>로깅 설정</strong> 버튼을 클릭하여 <em>QGroundControl</em>에 의해 표시되는 로깅 정보를 활성화 또는 비활성화합니다.</p><h2 id="콜솔-로그-옵션" tabindex="-1">콜솔 로그 옵션 <a class="header-anchor" href="#콜솔-로그-옵션" aria-label="Permalink to &quot;콜솔 로그 옵션&quot;">​</a></h2><p>가장 일반적인 로깅 옵션은 다음과 같습니다.</p><table><thead><tr><th>옵션</th><th>설명</th></tr></thead><tbody><tr><td><code>LinkManagerLog</code>, <code>MultiVehicleManagerLog</code></td><td>디버그 연결 문제</td></tr><tr><td><code>LinkManagerVerboseLog</code></td><td>디버그 직렬 포트 미감지 사용 가능한 직렬 포트의 매우 시끄러운 연속 출력.</td></tr><tr><td><code>FirmwareUpgradeLog</code></td><td>펌웨어 플래시 문제를 디버그</td></tr><tr><td><code>ParameterManagerLog</code></td><td>디버그 매개변수 로드 문제</td></tr><tr><td><code>ParameterManagerDebugCacheFailureLog</code></td><td>디버그 매개변수 캐시 crc가 누락</td></tr><tr><td><code>PlanManagerLog</code>, <code>MissionManagerLog</code>, <code>GeoFenceManagerLog</code>, <code>RallyPointManagerLog</code></td><td>디버그 계획 업로드/다운로드 문제</td></tr><tr><td><code>RadioComponentControllerLog</code></td><td>무선 보정 문제를 디버그</td></tr></tbody></table><h2 id="명령줄-로깅" tabindex="-1">명령줄 로깅 <a class="header-anchor" href="#명령줄-로깅" aria-label="Permalink to &quot;명령줄 로깅&quot;">​</a></h2><p>로깅을 위한 대체 메커니즘은 <code>--logging</code> 명령줄 옵션을 사용하는 것입니다. 이는 <em>QGroundControl</em>이 충돌하는 상황에서 로그 조회시에 편리합니다.</p><p>이 작업을 수행하는 방법과 추적 출력은 운영체제에 따라 조금씩 다릅니다.</p><ul><li><p>윈도우</p><ul><li>명령 프롬프트를 열고 디렉토리를 <strong>qgroundcontrol.exe</strong> 위치로 변경후 실행합니다. bash cd &quot;\\Program Files (x86)\\qgroundcontrol&quot; qgroundcontrol --logging:full</li><li><em>QGroundControl</em>이 시작되면 로그 출력이 있는 별도의 콘솔 창을 사용합니다.</li></ul></li><li><p>OSX</p><ul><li>터미널에서 <em>QGroundControl</em>을 실행합니다. 터미널 앱은 응용 프로그램/유틸리티에 있습니다. 터미널이 열리면 다음을 입력합니다. bash cd /Applications/qgroundcontrol.app/Contents/MacOS/ ./qgroundcontrol --logging:full</li><li>로그 추적은 터미널 창으로 출력됩니다.</li></ul></li><li><p>리눅스</p><ul><li><pre><code>bash
./qgroundcontrol-start.sh --logging:full
</code></pre></li><li>로그 추적은 실행 중인 셸에 출력됩니다.</li></ul></li></ul>`,11),l=[n];function i(c,g,s,u,p,_){return t(),r("div",null,l)}const b=e(a,[["render",i]]);export{q as __pageData,b as default};
