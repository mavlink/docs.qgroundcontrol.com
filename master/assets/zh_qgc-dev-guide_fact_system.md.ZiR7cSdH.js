import{_ as a,o as t,c as e,R as o}from"./chunks/framework.O0REyYVi.js";const m=JSON.parse('{"title":"Fact System(事实系统)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/qgc-dev-guide/fact_system.md","filePath":"zh/qgc-dev-guide/fact_system.md"}'),c={name:"zh/qgc-dev-guide/fact_system.md"},r=o('<h1 id="fact-system-事实系统" tabindex="-1">Fact System(事实系统) <a class="header-anchor" href="#fact-system-事实系统" aria-label="Permalink to &quot;Fact System(事实系统)&quot;">​</a></h1><p>Fact System(事实系统)提供一组标准化和简化QGC用户界面创建的功能。</p><h2 id="fact" tabindex="-1">Fact <a class="header-anchor" href="#fact" aria-label="Permalink to &quot;Fact {#fact}&quot;">​</a></h2><p>事实代表系统中的单个值。</p><h2 id="factmetadata" tabindex="-1">FactMetaData <a class="header-anchor" href="#factmetadata" aria-label="Permalink to &quot;FactMetaData&quot;">​</a></h2><p>与每个事实有FactMetaData相关联 它提供有关事实的详细信息，以便驱动自动用户界面生成和验证。</p><h2 id="事实控制" tabindex="-1">事实控制 <a class="header-anchor" href="#事实控制" aria-label="Permalink to &quot;事实控制&quot;">​</a></h2><p>事实控件是一个QML用户界面控件，它连接到Fact和它的FactMetaData，为用户提供控件以修改/显示与Fact相关的值。</p><h2 id="factgroup-事实小组" tabindex="-1">FactGroup（事实小组） <a class="header-anchor" href="#factgroup-事实小组" aria-label="Permalink to &quot;FactGroup（事实小组）&quot;">​</a></h2><p>A <em>Fact Group</em> is a group of <a href="#fact">Facts</a>. It is used to organise facts and manage user defined facts.</p><h2 id="custom-build-support" tabindex="-1">Custom Build Support <a class="header-anchor" href="#custom-build-support" aria-label="Permalink to &quot;Custom Build Support&quot;">​</a></h2><p>User defined facts can be added by overriding <code>factGroups</code> function of <code>FirmwarePlugin</code> in a custom firmware plugin class. These functions return a name to fact group map that is used to identify added fact groups. A custom fact group can be added by extending <code>FactGroup</code> class. FactMetaDatas could be defined using the appopriate <code>FactGroup</code> constructor by providing a json file containing necessery information.</p><p>Changing the metadata of existing facts is also possible by overriding <code>adjustMetaData</code> of <code>FirmwarePlugin</code> class.</p><p>A fact associated with a vehicle (including facts belonging to fact groups returned in <code>factGroups</code> function of the vehicles Firmware plugin) can be reached using <code>getFact(&quot;factName&quot;)</code> or <code>getFact(&quot;factGroupName.factName&quot;)</code></p><p>For additional information please refer to comments in <a href="https://github.com/mavlink/qgroundcontrol/blob/v4.0.8/src/FirmwarePlugin/FirmwarePlugin.h" target="_blank" rel="noreferrer">FirmwarePlugin.h</a>.</p>',15),i=[r];function s(n,d,u,f,l,p){return t(),e("div",null,i)}const g=a(c,[["render",s]]);export{m as __pageData,g as default};
