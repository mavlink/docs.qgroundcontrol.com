import{_ as t,c as e,o as s,a5 as n}from"./chunks/framework.Cba3l4cj.js";const m=JSON.parse('{"title":"Unit Tests","description":"","frontmatter":{},"headers":[],"relativePath":"tr/qgc-dev-guide/contribute/unit_tests.md","filePath":"tr/qgc-dev-guide/contribute/unit_tests.md"}'),i={name:"tr/qgc-dev-guide/contribute/unit_tests.md"},o=n('<h1 id="unit-tests" tabindex="-1">Unit Tests <a class="header-anchor" href="#unit-tests" aria-label="Permalink to &quot;Unit Tests&quot;">â€‹</a></h1><p><em>QGroundControl</em> (QGC) contains a set of unit tests that must pass before a pull request will be accepted. The addition of new complex subsystems to QGC should include a corresponding new unit test to test it.</p><p>The full list of unit tests can be found in <a href="https://github.com/mavlink/qgroundcontrol/blob/master/src/qgcunittest/UnitTestList.cc" target="_blank" rel="noreferrer">UnitTestList.cc</a>.</p><p>To run unit tests:</p><ol><li>Build in <code>debug</code> mode with <code>UNITTEST_BUILD</code> definition.</li><li>Copy the <strong>deploy/qgroundcontrol-start.sh</strong> script in the <strong>debug</strong> directory</li><li>Run <em>all</em> unit tests from the command line using the <code>--unittest</code> command line option. For Linux this is done as shown:<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>qgroundcontrol-start.sh --unittest</span></span></code></pre></div></li><li>Run <em>individual</em> unit tests by specifying the test name as well: <code>--unittest:RadioConfigTest</code>. For Linux this is done as shown:<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>qgroundcontrol-start.sh --unittest:RadioConfigTest</span></span></code></pre></div></li></ol>',5),a=[o];function c(d,r,l,u,p,h){return s(),e("div",null,a)}const _=t(i,[["render",c]]);export{m as __pageData,_ as default};
