import{_ as t,c as o,o as i,ag as u}from"./chunks/framework.BudlMBKT.js";const g=JSON.parse('{"title":"Custom Build Plugins","description":"","frontmatter":{},"headers":[],"relativePath":"zh/qgc-dev-guide/custom_build/plugins.md","filePath":"zh/qgc-dev-guide/custom_build/plugins.md"}'),a={name:"zh/qgc-dev-guide/custom_build/plugins.md"};function s(l,e,r,n,c,d){return i(),o("div",null,e[0]||(e[0]=[u('<h1 id="custom-build-plugins" tabindex="-1">Custom Build Plugins <a class="header-anchor" href="#custom-build-plugins" aria-label="Permalink to &quot;Custom Build Plugins&quot;">​</a></h1><p>The mechanisms for customizing QGC for a custom build is through the existing <code>FirmwarePlugin</code>, <code>AutoPilotPlugin</code> and <code>QGCCorePlugin</code> architectures. By creating subclasses of these plugins in your custom build you can change the behavior of QGC to suit your needs without needed to modify the upstream code.</p><h2 id="qgccoreplugin" tabindex="-1">QGCCorePlugin <a class="header-anchor" href="#qgccoreplugin" aria-label="Permalink to &quot;QGCCorePlugin&quot;">​</a></h2><p>This allows you to modify the parts of QGC which are not directly related to vehicle but are related to the QGC application itself. 这包括诸如应用程序设置、调色板、品牌标识等等内容。</p>',4)]))}const m=t(a,[["render",s]]);export{g as __pageData,m as default};
