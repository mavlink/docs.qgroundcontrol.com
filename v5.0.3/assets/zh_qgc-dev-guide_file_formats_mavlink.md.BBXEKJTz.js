import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.v43S21bq.js";const g=JSON.parse('{"title":"MAVLink 日志格式","description":"","frontmatter":{},"headers":[],"relativePath":"zh/qgc-dev-guide/file_formats/mavlink.md","filePath":"zh/qgc-dev-guide/file_formats/mavlink.md"}'),l={name:"zh/qgc-dev-guide/file_formats/mavlink.md"};function e(h,s,k,p,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="mavlink-日志格式" tabindex="-1">MAVLink 日志格式 <a class="header-anchor" href="#mavlink-日志格式" aria-label="Permalink to &quot;MAVLink 日志格式&quot;">​</a></h1><p><em>QGroundControll</em> 允许您生成普通的 MAVLink 数据包日志，这些日志可以被 重播（通过 QGroundControll） 来再次观察任务进行分析。</p><p>格式为二进制：</p><ul><li>字节 1-8：以微秒为单位的时间戳（自 Unix 时间起），无符号 64 位整数</li><li>Byte 9-271: MAVLink 数据包（最大数据包长度为263 bytes ，不是所有字节都必须是实际数据，数据包可能较短。 包括数据包开始标志)</li></ul><h2 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-label="Permalink to &quot;调试&quot;">​</a></h2><p>要检查您的数据，请在十六进制编辑器中打开您的写入文件。 你应该在 8 字节之后查看 <strong>0x55</strong> 。 前 8 个字节也应转换为有效的时间戳，因此应为接近零或<strong>1294571828792000</strong>（以微秒为单位的当前 Unix 时间戳）。</p><h2 id="用于记录-mavlink-的-c-示例" tabindex="-1">用于记录 MAVLink 的 C++ 示例 <a class="header-anchor" href="#用于记录-mavlink-的-c-示例" aria-label="Permalink to &quot;用于记录 MAVLink 的 C++ 示例&quot;">​</a></h2><p>下面的代码段演示了如何使用 C++ 标准库中的 <a href="http://www.cplusplus.com/reference/iostream/istream/" target="_blank" rel="noreferrer">C++ streams</a> 实现日志记录。</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//写入 mavlink 日志文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAVLINK_MAX_PACKET_LEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint64_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> buf[len];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint64_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getSystemTimeUsecs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">memcpy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(buf, (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint64_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavlink_msg_to_send_buffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(buf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint64_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), msg);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mavlinkFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> buf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flush;</span></span></code></pre></div>`,9)]))}const o=i(l,[["render",e]]);export{g as __pageData,o as default};
