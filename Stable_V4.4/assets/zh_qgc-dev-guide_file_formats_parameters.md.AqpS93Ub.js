import{_ as a,o as e,c as s,R as n}from"./chunks/framework.jcLJieDC.js";const u=JSON.parse('{"title":"参数文件格式","description":"","frontmatter":{},"headers":[],"relativePath":"zh/qgc-dev-guide/file_formats/parameters.md","filePath":"zh/qgc-dev-guide/file_formats/parameters.md"}'),p={name:"zh/qgc-dev-guide/file_formats/parameters.md"},t=n(`<h1 id="参数文件格式" tabindex="-1">参数文件格式 <a class="header-anchor" href="#参数文件格式" aria-label="Permalink to &quot;参数文件格式&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># Onboard parameters for Vehicle 1</span></span>
<span class="line"><span>#</span></span>
<span class="line"><span># # Vehicle-Id Component-Id Name Value Type</span></span>
<span class="line"><span>1   1   ACRO_LOCKING    0   2</span></span>
<span class="line"><span>1   1   ACRO_PITCH_RATE 180 4</span></span>
<span class="line"><span>1   1   ACRO_ROLL_RATE  180 4</span></span>
<span class="line"><span>1   1   ADSB_ENABLE 0   2</span></span></code></pre></div><p>以上是具有四个参数的参数文件的示例。 该文件可以包含所需数量的参数。 The file can include as many parameters as needed.</p><p>评论之前是＃。</p><p>此标头：#MAV ID COMPONENT ID PARAM NAME VALUE描述每行的格式：</p><ul><li>Vehicle-Id Vehicle id(载具编号）</li><li>Component-Id（参数的组件编号）</li><li>Name参数名称</li><li>Value参数值</li><li>使用MAVLink MAV_PARAM_TYPE_ *枚举值键入参数类型</li></ul><p>参数文件包含单个Vehicle的参数。 它可以包含该Vehicle中多个组件的参数。 It can contain parameters for multiple components within that Vehicle.</p>`,7),i=[t];function l(c,o,r,d,_,h){return e(),s("div",null,i)}const A=a(p,[["render",l]]);export{u as __pageData,A as default};
