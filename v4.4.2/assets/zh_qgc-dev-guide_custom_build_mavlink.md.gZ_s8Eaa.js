import{_ as e,o as t,c as a,R as r}from"./chunks/framework.8ye2JeXP.js";const _=JSON.parse('{"title":"MAVLink Customisation","description":"","frontmatter":{},"headers":[],"relativePath":"zh/qgc-dev-guide/custom_build/mavlink.md","filePath":"zh/qgc-dev-guide/custom_build/mavlink.md"}'),i={name:"zh/qgc-dev-guide/custom_build/mavlink.md"},o=r('<h1 id="mavlink-customisation" tabindex="-1">MAVLink Customisation <a class="header-anchor" href="#mavlink-customisation" aria-label="Permalink to &quot;MAVLink Customisation&quot;">â€‹</a></h1><p>QGC communicates with flight stacks using <a href="https://mavlink.io/en/" target="_blank" rel="noreferrer">MAVLink</a>, a very lightweight messaging protocol that has been designed for the drone ecosystem.</p><p>QGC includes the <a href="https://mavlink.io/en/messages/all.html" target="_blank" rel="noreferrer">all.xml</a> dialect by default. The <code>all.xml</code> includes all other dialects in the <a href="https://github.com/mavlink/mavlink/tree/master/message_definitions/v1.0" target="_blank" rel="noreferrer">mavlink/mavlink</a> repository, and allows it to communicate with both PX4 and Ardupilot. Previous versions of QGC (v4.2.8 and earlier), used the <code>ArduPilotMega.xml</code> dialect.</p><p>In order to add support for a new set of messages you should add them to <a href="https://mavlink.io/en/messages/development.html" target="_blank" rel="noreferrer">development.xml</a>, <a href="https://mavlink.io/en/messages/ardupilotmega.html" target="_blank" rel="noreferrer">ArduPilotMega.xml</a>, or <a href="https://mavlink.io/en/messages/common.html" target="_blank" rel="noreferrer">common.xml</a> (for PX4), or fork <em>QGroundControl</em> and include your own dialect.</p><p>To modify the version of MAVLink used by QGC:</p><ul><li>Replace the pre-build C library at <a href="https://github.com/mavlink/qgroundcontrol/tree/master/libs/mavlink/include/mavlink" target="_blank" rel="noreferrer">/qgroundcontrol/libs/mavlink/include/mavlink</a>. <ul><li>By default this is a submodule importing https://github.com/mavlink/c_library_v2</li><li>You can change the submodule, or <a href="https://mavlink.io/en/getting_started/generate_libraries.html" target="_blank" rel="noreferrer">build your own libraries</a> using the MAVLink toolchain.</li></ul></li><li>You can change the whole dialect used by setting it in <a href="https://github.com/mavlink/qgroundcontrol/blob/master/QGCExternalLibs.pri#L52" target="_blank" rel="noreferrer"><code>MAVLINK_CONF</code></a> when running <em>qmake</em>.</li></ul>',6),l=[o];function n(s,m,d,h,c,u){return t(),a("div",null,l)}const k=e(i,[["render",n]]);export{_ as __pageData,k as default};
