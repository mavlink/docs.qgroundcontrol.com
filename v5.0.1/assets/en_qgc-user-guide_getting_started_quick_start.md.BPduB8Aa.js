import{_ as e}from"./chunks/fly_view_connected_vehicle.BNLCBbxg.js";import{_ as i,c as o,o as a,ag as n}from"./chunks/framework.Dne1pdn_.js";const _=JSON.parse('{"title":"QGroundControl Quick Start","description":"","frontmatter":{},"headers":[],"relativePath":"en/qgc-user-guide/getting_started/quick_start.md","filePath":"en/qgc-user-guide/getting_started/quick_start.md"}'),l={name:"en/qgc-user-guide/getting_started/quick_start.md"};function r(s,t,c,u,d,h){return a(),o("div",null,t[0]||(t[0]=[n('<h1 id="qgroundcontrol-quick-start" tabindex="-1">QGroundControl Quick Start <a class="header-anchor" href="#qgroundcontrol-quick-start" aria-label="Permalink to &quot;QGroundControl Quick Start&quot;">â€‹</a></h1><p>Getting <em>QGroundControl</em> up and running is quick and easy:</p><ol><li><a href="./../releases/daily_builds.html">Download and install (Daily 5.0)</a> the application.</li><li>Start <em>QGroundControl</em>.</li><li>Attach your vehicle to the ground station device via USB, through a telemetry radio, or over WiFi. <em>QGroundControl</em> should detect your vehicle and connect to it automatically.</li></ol><p>That&#39;s it! If the vehicle is ready to fly, <em>QGroundControl</em> should display <a href="./../fly_view/fly_view.html">Fly View</a> as shown below (otherwise it will open <a href="./../setup_view/setup_view.html">Setup View</a>).</p><p><img src="'+e+'" alt=""></p><p>A good way to become familiar with <em>QGroundControl</em> is to start experimenting:</p><ul><li>Use the View Selector to switch between main views: <ul><li>Plan Flight</li><li>Analyze Tools</li><li>Vehicle Configuration</li><li>Application Settings</li></ul></li><li>Click the <em>Status Indicators</em> on the toolbar to find out the status of the connected vehicle.</li></ul><p>While the UI is fairly intuitive, this documentation can also be referenced to find out more.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Make sure QGC has an internet connection when you connect a new vehicle in order to display map content.</p></div>',9)]))}const g=i(l,[["render",r]]);export{_ as __pageData,g as default};
