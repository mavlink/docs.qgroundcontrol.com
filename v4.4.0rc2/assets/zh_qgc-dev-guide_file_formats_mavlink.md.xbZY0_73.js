import{_ as i,o as s,c as a,R as t}from"./chunks/framework.JodFZ3wX.js";const c=JSON.parse('{"title":"MAVLink 日志格式","description":"","frontmatter":{},"headers":[],"relativePath":"zh/qgc-dev-guide/file_formats/mavlink.md","filePath":"zh/qgc-dev-guide/file_formats/mavlink.md"}'),n={name:"zh/qgc-dev-guide/file_formats/mavlink.md"},e=t(`<h1 id="mavlink-日志格式" tabindex="-1">MAVLink 日志格式 <a class="header-anchor" href="#mavlink-日志格式" aria-label="Permalink to &quot;MAVLink 日志格式&quot;">​</a></h1><p><em>QGC 地面站</em> 能生成纯 MAVLink 数据包日志，并支持日志回放，以便飞行任务结束后查看任务执行状态来进行数据分析。</p><p>The format is binary:</p><ul><li>字节 1-8：64位无符号整数，表示时间戳，单位为微秒，起始时间为Unix纪元（UTM时间1970年1月1日0时0分0秒）</li><li>字节 9-271：MAVLink 数据包（数据包的最大长度为263字节，包括数据包起始标识。一般来说，数据包中的可用字节不会被实际数据全部填充，因此，数据包的实际长度会小于 263 字节 。 Includes packet start sign)</li></ul><h2 id="debugging" tabindex="-1">Debugging <a class="header-anchor" href="#debugging" aria-label="Permalink to &quot;Debugging&quot;">​</a></h2><p>To check your data, open your written file in a hex editor. You should see after 8 bytes <strong>0x55</strong>. The first 8 bytes should also convert to a valid timestamp, so something either close to zero or around the number <strong>1294571828792000</strong> (which is the current Unix epoch timestamp in microseconds).</p><h2 id="用于记录-mavlink-的-c-例程" tabindex="-1">用于记录 MAVLink 的 C++ 例程 <a class="header-anchor" href="#用于记录-mavlink-的-c-例程" aria-label="Permalink to &quot;用于记录 MAVLink 的 C++ 例程&quot;">​</a></h2><p>下面的代码段演示，如何使用 C++ 标准库中的 <a href="http://www.cplusplus.com/reference/iostream/istream/" target="_blank" rel="noreferrer">C++ streams</a> 实现日志记录。</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//write into mavlink logfile</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAVLINK_MAX_PACKET_LEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint64_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> buf[len];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint64_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getSystemTimeUsecs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">memcpy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(buf, (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint64_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavlink_msg_to_send_buffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(buf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint64_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), msg);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mavlinkFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> buf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flush;</span></span></code></pre></div>`,9),h=[e];function l(k,p,r,d,o,E){return s(),a("div",null,h)}const m=i(n,[["render",l]]);export{c as __pageData,m as default};
